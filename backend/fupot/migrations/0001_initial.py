# Generated by Django 3.1.1 on 2020-12-31 19:19

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255, unique=True)),
                ('establishment_type', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=60, null=True, verbose_name='email')),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326)),
                ('owner', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bg_img', models.ImageField(blank=True, null=True, upload_to='fupot/questions/backgrounds/')),
                ('title', models.CharField(max_length=255)),
                ('prompt', models.TextField(blank=True, max_length=1027, null=True)),
                ('starts_at', models.TimeField()),
                ('ends_at', models.TimeField()),
                ('winner_title', models.CharField(blank=True, max_length=255, null=True)),
                ('loser_title', models.CharField(blank=True, max_length=255, null=True)),
                ('winner_body', models.TextField(blank=True, max_length=1027, null=True)),
                ('loser_body', models.TextField(blank=True, max_length=1027, null=True)),
                ('extra_data', models.CharField(blank=True, max_length=255, null=True)),
                ('closed', models.BooleanField(default=False)),
                ('has_winner', models.BooleanField(default=False)),
                ('num_submissions', models.IntegerField(default=0)),
                ('sent', models.BooleanField(default=False)),
                ('answers_1', models.CharField(help_text='Enter the answer text that                                             you want displayed', max_length=1000, null=True)),
                ('answers_2', models.CharField(help_text='Enter the answer text that                                             you want displayed', max_length=1000, null=True)),
                ('answers_3', models.CharField(help_text='Enter the answer text that                                             you want displayed', max_length=1000, null=True)),
                ('answers_4', models.CharField(help_text='Enter the answer text that                                             you want displayed', max_length=1000, null=True)),
                ('correct_answer', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fupot.group')),
                ('owner', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('questions_answered', models.IntegerField(blank=True, default=0, null=True)),
                ('groups_joined', models.IntegerField(blank=True, default=0, null=True)),
                ('prizes_won', models.IntegerField(blank=True, default=0, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=255)),
                ('created_at', models.TimeField(auto_now_add=True)),
                ('correct', models.BooleanField(default=False, help_text='Is this a correct answer?', verbose_name='Correct')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fupot.group')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fupot.question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('correct_answer', models.CharField(max_length=255)),
                ('user_answer', models.CharField(max_length=255)),
                ('correct', models.BooleanField(default=False, help_text='Is this a correct answer?', verbose_name='Correct')),
                ('group_instance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='fupot.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OwnerStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_asked', models.IntegerField(blank=True, default=0, null=True)),
                ('prizes_issued', models.IntegerField(blank=True, default=0, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MyDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('active', models.BooleanField(default=True, help_text='Inactive devices will not be sent notifications', verbose_name='Is active')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creation date')),
                ('device_id', models.CharField(blank=True, db_index=True, help_text='Unique device identifier', max_length=150, null=True, verbose_name='Device ID')),
                ('registration_id', models.TextField(verbose_name='Registration token')),
                ('type', models.CharField(choices=[('ios', 'ios'), ('android', 'android'), ('web', 'web')], max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'FCM device',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fupot.group')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
